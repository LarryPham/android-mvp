apply plugin: 'com.android.application'

def buildTime() {
	return new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
}

// Tweak current app version here!
def versionMajor = 1 // major version
def versionMinor = 0 // minor version
def versionPatch = 0 // fix/patch version
def versionBuild = 0 // insignificant version boosts (e.g. debug, testing etc. changes)

configurations.all {
	resolutionStrategy {
		force rootProject.ext.lib.support_v4
		force rootProject.ext.lib.appcompat_v7
	}
}

android {
	compileSdkVersion 			rootProject.ext.build.compileSdkVersion
	buildToolsVersion 			rootProject.ext.build.buildToolsVersion

    defaultConfig {
		applicationId			"de.reutlingen_university.swa.mvpstructureexample"
		minSdkVersion 			15
		targetSdkVersion 		rootProject.ext.build.targetSdkVersion
		versionCode 			versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
		versionName 			"${versionMajor}.${versionMinor}.${versionPatch}"
		buildConfigField 		"String", "BUILD_TIME", "\"${buildTime()}\""
	}

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

	signingConfigs {
		release {
		}
	}
	
    buildTypes {
		debug {
			minifyEnabled 		false
			versionNameSuffix 	"-debug"
		}

		release {
			minifyEnabled 		false
			proguardFiles 		getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			signingConfig 		signingConfigs.release
		}
	}

	lintOptions {
		abortOnError false
	}
}

dependencies {
	// Support Libraries
	compile rootProject.ext.lib.support_v4
	compile rootProject.ext.lib.appcompat_v7

	// External Compiled Libraries
	compile fileTree(dir: 'libs', include: ['*.jar'])
}
